version: '3.8'

services:
  nginx:
    image: nginx:1.22.1-alpine
    container_name: ${APP_NAME}-nginx
    ports:
      - "8001:80" # local 80
    volumes:
      - '.:/var/www/html'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf'
    depends_on:
      - php
      - mysql
    networks:
      - web

  mysql:
    image: mysql:8.0
    container_name: ${APP_NAME}-mysql
    restart: unless-stopped
    tty: true # shel access
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - push-notif-package-mysql-data:/var/lib/mysql
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    networks:
      - web

  php:
    build:
      context: ./docker/dockerfiles # Directory to search for
      dockerfile: php.dockerfile
    container_name: ${APP_NAME}-php
    volumes:
      - .:/var/www/html
    networks:
      - web

networks:
  web:

volumes:
  push-notif-package-mysql-data:
    external: true


# ------------------------------------------------------------------------
# 1. at first, you make volume with this command:
#     docker volume create push-notif-package-mysql-data
# ------------------------------------------------------------------------
# 2. then change
#     docker/nginx/default.conf
# ------------------------------------------------------------------------
# 3. docker-compose up
# ------------------------------------------------------------------------
# for database go to
#     http://localhost/db.php
#           - Server: mysql
#           - push-notif-package: [ from .env of laravel ]
#           - push-notif-package: [ from .env of laravel ]
# ------------------------------------------------------------------------
# for php artisan commands use this:
#     docker exec -it [Service Name]-php /bin/bash
# like:
#     docker exec -it push-notif-package-php /bin/bash
# ------------------------------------------------------------------------
# Ports:
#     push-notif-package   8000

